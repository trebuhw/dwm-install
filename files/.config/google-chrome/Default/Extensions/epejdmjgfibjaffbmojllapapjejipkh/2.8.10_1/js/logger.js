const SamsungSCloudSyncService={SyncLogs:{log:logger,error:logger,data:[]},PassLogs:{data:[],log:str=>{let logStr=`${(new Date).toLocaleString()} ${"string"==typeof str?str:JSON.stringify(str)}`;for("production"==EXT_ENVIRONMENT?(logStr=logStr.replace(/"password":"(.*?)","/g,'"password":"*****","'),logStr=logStr.replace(/"username":"(.*?)","/g,'"username":"*****","'),logStr=logStr.replace(/"value":"(.*?)","/g,'"value":"*****","'),logStr=logStr.replace(/"devicePublicKey":"(.*?)","/g,'"value":"*****","'),logStr=logStr.replace(/"devicePublicKeyPem":"(.*?)","/g,'"value":"*****","')):console.log(logStr),SamsungSCloudSyncService.PassLogs.data.push(logStr);SamsungSCloudSyncService.PassLogs.data.length>5e3;)SamsungSCloudSyncService.PassLogs.data.shift()},export:()=>SamsungSCloudSyncService.PassLogs.data},clearLogs:()=>{SamsungSCloudSyncService.SyncLogs.data=[],SamsungSCloudSyncService.PassLogs.data=[]}};function initFS(){window.requestFileSystem(TEMPORARY,0,(filesystem=>filesystem.root.getFile("samsung-scloud-sync-logs.txt",{create:!1},(fileEntry=>fileEntry.remove((()=>{SamsungSCloudSyncService.SyncLogs.log("File removed.")}),fileNotExist)),fileNotExist)),fileNotExist)}function logger(str){const stack=(new Error).stack.replace("Error","Stack");for(SamsungSCloudSyncService.SyncLogs.data.push(`${str} \n  ${stack}`);SamsungSCloudSyncService.SyncLogs.data.length>5e3;)SamsungSCloudSyncService.SyncLogs.data.shift();"production"!==EXT_ENVIRONMENT&&(console.groupCollapsed(str),console.info(stack),console.groupEnd())}function fileNotExist(){SamsungSCloudSyncService.SyncLogs.log("Log file not exist")}chrome.runtime.onMessage.addListener((async(response,sender,sendResponse)=>{const{cmd:cmd}=response;if("GET_BACKGROUND_LOG"===cmd)sendResponse({pass:JSON.stringify(SamsungSCloudSyncService.PassLogs.data),sync:JSON.stringify(SamsungSCloudSyncService.SyncLogs.data)})}));