const isLoggedIn=()=>"1"==storageLocalApi.getItem(IS_LOGGED_OUT),isBookmarkSyncOn=()=>!1!==storageLocalApi.getItem(IS_BOOKMARK_SYNC_ON)&&!1!==storageLocalApi.getItem(SYNC_ENABLED),isOpenTabsSyncOn=()=>!1,sanitizeTitle=title=>title?title.trim().replace(/(")/g,"","ig"):UNTITLED,notify=({body:body,title:title,icon:icon="assets/img/logo48x48.png"})=>{var opt={type:"basic",iconUrl:icon,title:title,message:body,priority:1};chrome.notifications.create("noti",opt,(function(){})),setTimeout((function(){chrome.notifications.clear("noti",(function(){}))}),1e4)},bookmarkSavedNotif=({url:url,title:title,enabled:enabled=!0})=>{enabled&&notify({body:title,title:NOTIFICATION_BOOKMARK_SUCCESS})},enterPressed=cb=>e=>e.keyCode===KEYS.ENTER&&cb(e),url2title=href=>{let{hostname:hostname}=h("a",{href:href});switch(hostname=hostname.replace("www.","").replace("http://","").replace("https://",""),hostname=hostname.split("."),hostname.length){case 1:case 2:return hostname[0];default:return hostname.slice(-2)[0]}},isVisible=n=>"block"===n.style.display||"visible"===n.style.visibility,h=(type,attributes={},children)=>{const $node=document.createElement(type);return Object.keys(attributes).forEach((e=>"function"==typeof attributes[e]?$node.addEventListener(e,attributes[e],!1):$node.setAttribute(e,attributes[e]))),"string"==typeof children?$node.innerHTML=children:Array.isArray(children)&&children.forEach((e=>$node.appendChild(e))),$node};function fillBookmarkFields({$title:$title,$url:$url}){return({title:title="",url:url="",isFolder:isFolder=!1}={})=>{$title.value=title,isFolder?$url.parentNode.style.display="none":($url.value=url,$url.parentNode.style.display="")}}const isValidURL=url=>URL_REGEX.test(url),isValidEmail=email=>EMAIL_REGEX.test(email),isValidPhone=phone=>PHONE_REGEX.test(phone),isValidTitle=title=>TITLE_REGEX.test(title);function importFolderIcon(){return`assets/img/internet_list_folder_${getBrowserName().toLowerCase()}.png`}function importFolderSYNC4EndsWith(){const browsername=getBrowserName().toLowerCase(),BROWSERNAME=getBrowserName().toUpperCase();return`${browsername}_0_${browsername}_${IMPORTED_FOLDER_IDS[BROWSERNAME]}`}function importFolderSYNC4EndsFromKey(key){const browsername=key.toLowerCase();return`${browsername}_0_${browsername}_${IMPORTED_FOLDER_IDS[key]}`}function queryForImportFolder({selection:selection=["SYNC4","_ID","PARENT","TITLE"]}){return DB.Query.bookmarks({selection:selection,where:{equals:[{key:"IS_DELETED",value:"0"}],likes:[{key:"SYNC4",value:importFolderSYNC4EndsWith()}]}})}function updateModifiedOfImportFolder(time=Date.now()){return DB.Update.bookmarks({newData:{MODIFIED:time,SYNC5:time,DIRTY:1},where:{equals:[{key:"IS_DELETED",value:"0"}],likes:[{key:"SYNC4",value:importFolderSYNC4EndsWith()}]}})}function getLocale(){const[languageCode,countryCode]=(navigator.userLanguage||navigator.language).split("-");return{languageCode:languageCode,countryCode:countryCode}}function isFromChina(){if(storageLocalApi.getItem(IS_FROM_CHINA))return Promise.resolve("1"==storageLocalApi.getItem(IS_FROM_CHINA));const locale=getLocale(),isLocaleChinese=["cn","tw","hk"].some((e=>(locale.countryCode||"").toLowerCase()===e))||"zh"===(locale.languageCode||"").toLowerCase();return console.log(`isFromChina returned ${isLocaleChinese}`),new Promise((async yes=>{storageLocalApi.setItem(IS_FROM_CHINA,!0===isLocaleChinese?"1":"0"),yes(isLocaleChinese)}))}async function clearLocalStorage(){await storageLocalApi.setArrayItems([[IS_LOGGED_OUT,0],[BOOKMARK_SERVER_TIME,0],[TAB_SERVER_TIME,0],[BROWSER_TAB,0]]),await storageLocalApi.removeItems([AUTH_URL,IS_FROM_CHINA,DEVICE_NAME,PRIMARY_BASE_URL,CLIENT_ID,ACCESS_TOKEN,USER_ID,ACCESS_TOKEN_GET_PARAMS,ACCESS_TOKEN_PUT_PARAMS,SYNC_STATUS,REFRESH_TOKEN,REFRESH_TOKEN_EXPIRES_IN,LAST_IMPORT_TIME,IS_BOOKMARK_SYNC_ON,IS_OPEN_TABS_SYNC_ON,SYNC_ENABLED,SYNC_USING_SETTING,"ORIGIN_ID","LEFT_PANE_ACTIVE","SPASS_DEVICE_PEM_PUBLIC_KEY","LAUNCH_EXTENSION_COUNT","PASSWORD_SYNC_BADGE_SHOWED","PASSWORD_SYNC_BADGE_SHOWED_1ST"])}async function clearDatabase(){SamsungSCloudSyncService.clearLogs(),DB.clear(),await storageLocalApi.removeItem(ACCESS_TOKEN),await storageLocalApi.setItem(SYNC_STATUS,""),SamsungSCloudSyncService.SyncLogs.log("Logout Complete.")}async function cleanupStateOnLogout(){await storageLocalApi.setItem(IS_LOGGED_OUT,0),clearLocalStorage(),SamsungSCloudSyncService.BrowserOverlay.onLogoutClick()}function findTabWithURL(urls,windows){const tabHasURL=t=>(Array.isArray(urls)?urls:[urls]).some((u=>t.url.match(u))),win=windows.find((w=>w.tabs.some(tabHasURL))),tab=win?win.tabs.find(tabHasURL):void 0;return{win:win,tab:tab}}function getWindowOptions(){return new Promise((resolve=>{chrome.windows.getLastFocused({windowTypes:["normal"]},(win=>{resolve({top:win.top+100,left:win.left+win.width-450,width:400,height:700,type:"popup"})}))}))}function windowPopupWithURLExists(urls){return new Promise(((resolve,reject)=>chrome.windows.getAll({populate:!0,windowTypes:["popup"]},(windows=>{const{win:win,tab:tab}=findTabWithURL(urls,windows);win&&tab?resolve({win:win,tab:tab}):reject()}))))}const createTabForURL=(url,windowId)=>new Promise((resolve=>chrome.tabs.create({windowId:windowId,url:url},resolve))),createTabForEachURL=(urls,windowId)=>Promise.all(urls.map((url=>createTabForURL(url,windowId)))),createTabsInWindow=(url,...urls)=>new Promise((resolve=>chrome.windows.create({top:100,left:Math.round((screen.width-.75*screen.width)/2),height:Math.round(.75*screen.height),width:Math.round(.75*screen.width),type:"normal",url:url},(win=>createTabForEachURL(urls,win.id).then(resolve))))),createTabsInSecretWindow=(url,...urls)=>new Promise((resolve=>chrome.windows.create({top:100,left:Math.round((screen.width-.75*screen.width)/2),height:Math.round(.75*screen.height),width:Math.round(.75*screen.width),type:"normal",incognito:!0,url:url},(win=>createTabForEachURL(urls,win.id).then(resolve)))));function updateTabInCurrentWindow(url){chrome.tabs.query({active:!0,currentWindow:!0},(function(tabs){chrome.tabs.update(tabs[0].id,{url:url},(()=>window.close()))}))}function createTabInCurrentWindow(...urls){chrome.windows.getCurrent((win=>createTabForEachURL(urls,win.id).then((()=>window.close()))))}