function AbstractServiceManager(cid,cloud,clientDeviceId){this.initializeDefaults=function(){this.TAG="AbstractServiceManager",this.RCODE="rcode",this.mClientDeviceId=null,this.mCid=null,SamsungSCloudSyncService.mNetClient||(SamsungSCloudSyncService.mNetClient=new NetworkClient),SamsungSCloudSyncService.sAuthManager||(SamsungSCloudSyncService.sAuthManager=new AuthManager)},this.initializeDefaults(),this.mCid=cid,SamsungSCloudSyncService.mCloudServiceManager||(SamsungSCloudSyncService.mCloudServiceManager=cloud),this.mClientDeviceId=clientDeviceId,this.close=function(){SamsungSCloudSyncService.mNetClient&&SamsungSCloudSyncService.mNetClient.close()},this.createMetaResponse=function(networkResponse){if(void 0!==networkResponse){SamsungSCloudSyncService.mKVSResponse.clear();try{null!=networkResponse.getBody()&&SamsungSCloudSyncService.mKVSResponse.fromJSON(networkResponse.getBody())}catch(e){SamsungSCloudSyncService.SyncLogs.log(`createMetaResponse: JSON PARSER Exception = ${e}`)}}},this.handleRequest=function(requestType,url,responseMeta,Json,multipart,callback){this.callbackFromNWClient=callback;let networkResponse=null;if(void 0!==SamsungSCloudSyncService.mNetClient)if(void 0!==requestType)if(void 0!==url)if(void 0!==responseMeta)try{switch(SamsungSCloudSyncService.mSyncConstants||(SamsungSCloudSyncService.mSyncConstants=new SyncConstants),this.responseCallbackFromNetworkClient=this.responseCallbackFromNetworkClient.bind(this),requestType){case SamsungSCloudSyncService.mSyncConstants.REQUEST_POST:void 0!==Json?networkResponse=SamsungSCloudSyncService.mNetClient.postRequest(url,Json):SamsungSCloudSyncService.SyncLogs.log("handleRequest: Json is not defined");break;case SamsungSCloudSyncService.mSyncConstants.REQUEST_GET:networkResponse=SamsungSCloudSyncService.mNetClient.getRequest(url,this.APP_ID_HEADER,this.APP_ID,this.responseCallbackFromNetworkClient);break;case SamsungSCloudSyncService.mSyncConstants.REQUEST_POST_MULTIPART:void 0!==Json?networkResponse=SamsungSCloudSyncService.mNetClient.postMultiPart(url,multipart):SamsungSCloudSyncService.SyncLogs.log("handleRequest: multipart is not defined");break;case SamsungSCloudSyncService.mSyncConstants.REQUEST_GET_FILE:networkResponse=SamsungSCloudSyncService.mNetClient.getFile(url);break;case SamsungSCloudSyncService.mSyncConstants.REQUEST_GET_META:SamsungSCloudSyncService.mORSConstants||(SamsungSCloudSyncService.mORSConstants=new ORSConstants),networkResponse=SamsungSCloudSyncService.mNetClient.getWithHeader(url,SamsungSCloudSyncService.mORSConstants.METADATA_HEADER_NAME,SamsungSCloudSyncService.mORSConstants.METADATA_HEADER_VALUE);break;default:SamsungSCloudSyncService.SyncLogs.log("handleRequest: Wrong Request.")}}catch(e){SamsungSCloudSyncService.SyncLogs.log(`handleRequest: IOException occured while Http Request, caused by : ${e.message}`)}else SamsungSCloudSyncService.SyncLogs.log("handleRequest: responseMeta is not defined");else SamsungSCloudSyncService.SyncLogs.log("handleRequest: json is not defined");else SamsungSCloudSyncService.SyncLogs.log("handleRequest: requestType is not defined");else SamsungSCloudSyncService.SyncLogs.log("handleRequest: nNetClient is not defined")},this.responseCallbackFromNetworkClient=function(networkResponse){this.createMetaResponse(networkResponse,null),null==networkResponse&&SamsungSCloudSyncService.SyncLogs.log("responseCallbackFromNetworkClient:There is no Network Response.");const responseBody=networkResponse.getBody(),status=networkResponse.getStatus();if(void 0!==status){switch(status){case 0:break;case HttpStatus.SC_BAD_REQUEST:if(void 0!==responseBody)try{if((json=JSON.parse(responseBody)).rcode){var rcode=json.rcode;SamsungSCloudSyncService.mServerCommonConstants||(SamsungSCloudSyncService.mServerCommonConstants=new ServerCommonConstants),SamsungSCloudSyncService.mServerCommonConstants.BAD_ACCESS_TOKEN==rcode&&SamsungSCloudSyncService.SyncLogs.log("responseCallbackFromNetworkClient:Auth Token Exception")}}catch(e){SamsungSCloudSyncService.SyncLogs.log("responseCallbackFromNetworkClient:JSON PARSER Exception")}else SamsungSCloudSyncService.SyncLogs.log("responseCallbackFromNetworkClient: responseBody is not defined");default:if(void 0!==responseBody)try{var json;if((json=JSON.parse(responseBody)).rcode){rcode=json.rcode;SamsungSCloudSyncService.SyncLogs.log(`responseCallbackFromNetworkClient: HTTPEXCEPTION, rcode is ${rcode}`)}}catch(e){SamsungSCloudSyncService.SyncLogs.log("responseCallbackFromNetworkClient: JSON PARSER Exception")}else SamsungSCloudSyncService.SyncLogs.log("responseCallbackFromNetworkClient: responseBody is not defined")}this.callbackFromNWClient&&this.callbackFromNWClient(SamsungSCloudSyncService.mKVSResponse)}else SamsungSCloudSyncService.SyncLogs.log("responseCallbackFromNetworkClient: status is not defined")},this.cleanup=function(){}}function ICloudServiceManager(){this.CLOUD_START_R_CLEARED=-1,this.CLOUD_START_R_SUCCESS=0,this.CLOUD_START_R_SERVER_MAINTENCE=5,this.CLOUD_START_R_FULLSYNC=9,this.getRecordServiceManager=function(){},this.getFileServiceManager=function(){},this.serviceStart=function(trigger){},this.serviceEnd=function(isSuc,msg){},this.getLastApi=function(){},this.setLastApi=function(api){},this.getCtid=function(){},this.setCtid=function(ctid){},this.setAuthManager=function(authManger){},this.getAuthManager=function(){}}function IPDMServiceApiHelper(){this.addHeaderForApi=function(request){},this.getUserAgent=function(){}}function IRecordServiceManager(){IPDMServiceApiHelper.call(this),this.getServerTimeStamp=function(){},this.deleteItems=function(recordList){},this.setItems=function(recordDataList){},this.getItems=function(keyIds){},this.getKeys=function(startKey,count){},this.getUpdates=function(startTimeStamp,synckey,count){},this.close=function(){}}function KVSConstants(){this.GETKEY="/kvs/key?",this.GETKEYS="/kvs/keys?",this.UPDATE="/kvs/updates?",this.DELETE="/kvs/?action=delete",this.SET="/kvs/?action=set",this.ITEMS="/kvs/items?",this.ITEM="/kvs/item?",this.TIMESTAMP="/kvs/timestamp?",this.START_TIMESTAMP="&start_timestamp=",this.START="&start=",this.COUNT="&count=",this.CLOUD_PREPARE="/cloud/prepare?",this.CLOUD_START="/cloud/start?",this.CLOUD_END="/cloud/end?",this.CDID="cdid",this.DID="did",this.CTID="ctid",this.RESULT="result",this.TRIGGER="trigger",this.RESULT_RCODE="r",this.RESULT_RCODE_SUC="0",this.RESULT_ERROR="e",this.SYNC_PUSH="sync_push",this.SYNC_SELF="sync_self",this.KVS={},this.ORS={},this.AUTH={},this.SERVICE={},this.CLOUD={},this.cleanup=function(){this.GETKEY=null,this.GETKEYS=null,this.UPDATE=null,this.DELETE=null,this.SET=null,this.ITEMS=null,this.ITEM=null,this.TIMESTAMP=null,this.START_TIMESTAMP=null,this.START=null,this.COUNT=null,this.CLOUD_PREPARE=null,this.CLOUD_START=null,this.CLOUD_END=null,this.CDID=null,this.DID=null,this.CTID=null,this.RESULT=null,this.TRIGGER=null,this.RESULT_RCODE=null,this.RESULT_RCODE_SUC=null,this.RESULT_ERROR=null,this.SYNC_PUSH=null,this.SYNC_SELF=null,this.KVS=null,this.ORS=null,this.AUTH=null,this.SERVICE=null,this.CLOUD=null},this.initializeKVSContants=function(){this.KVS.KEYS=211,this.KVS.UPDATES=212,this.KVS.ITEM=213,this.KVS.ITEMS=214,this.KVS.TIMESTAMP=215,this.KVS.SET=216,this.KVS.DELETE=217},this.initializeORSContants=function(){this.ORS.CREATE=310,this.ORS.DELETE=311,this.ORS.RENAME=312,this.ORS.MOVE=313,this.ORS.LIST=314,this.ORS.UPLOAD=315,this.ORS.DOWNLOAD=316,this.ORS.COPY=317,this.ORS.GET=318,this.ORS.SET=319},this.initializeAuthContants=function(){this.AUTH.GET_USER_INFO=410,this.AUTH.GET_USER_INFO_WEB=411},this.initializeServiceContants=function(){this.SERVICE.ACTIVATE=510,this.SERVICE.ACTIVATEON=511,this.SERVICE.DEACTIVATE=512,this.SERVICE.GET_DEVICE_LIST=513},this.initializeCloudContants=function(){this.CLOUD.PREPARE=810,this.CLOUD.START=811,this.CLOUD.END=812},this.initializeKVSContants(),this.initializeORSContants(),this.initializeAuthContants(),this.initializeServiceContants(),this.initializeCloudContants()}function KVSServiceManager(cid,cloud){AbstractServiceManager.call(this,cid,cloud),IRecordServiceManager.call(this,cid,cloud),this.TAG="KVSServiceManager",this.APP_ID_HEADER="x-sc-appid",this.APP_ID=storageLocalApi.getItem(REFRESH_TOKEN)?APP_ID:OLD_APP_ID,SamsungSCloudSyncService.mNetClient||(SamsungSCloudSyncService.mNetClient=new NetworkClient),this.deleteItems=function(recordList,callback){if(null==recordList)return null;SamsungSCloudSyncService.mCloudServiceManager||(SamsungSCloudSyncService.mCloudServiceManager=new ICloudServiceManager);const baseUrl=SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getBaseUrl();null==baseUrl&&SamsungSCloudSyncService.SyncLogs.log("deleteItems: There is NO Base URL.");let url=`https://${baseUrl}`;SamsungSCloudSyncService.mKVSConstants||(SamsungSCloudSyncService.mKVSConstants=new KVSConstants);url=url.concat(SamsungSCloudSyncService.mKVSConstants.DELETE),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getPutApiParams(this.mCid)),url=url.concat("&"),url=url.concat(SamsungSCloudSyncService.mKVSConstants.CTID),url=url.concat("="),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getCtid());let deleteobject=null;const deletekeys=[];for(let i=0;i<recordList.length;i++){const recordItemObject=recordList[i];try{deleteobject=recordItemObject.toJSON()}catch(e){SamsungSCloudSyncService.SyncLogs.log("deleteItems: JSON PARSER Exception")}deletekeys.push(deleteobject)}SamsungSCloudSyncService.mCloudServiceManager.setLastApi(SamsungSCloudSyncService.mKVSConstants.KVS.DELETE),SamsungSCloudSyncService.mKVSResponse||(SamsungSCloudSyncService.mKVSResponse=new KVSResponse);SamsungSCloudSyncService.mSyncConstants||(SamsungSCloudSyncService.mSyncConstants=new SyncConstants);return this.handleRequest(SamsungSCloudSyncService.mSyncConstants.REQUEST_POST,url.toString(),SamsungSCloudSyncService.mKVSResponse,JSON.stringify(deletekeys),null,callback),SamsungSCloudSyncService.mKVSResponse},this.deleteItemsBySYNC1=function(sync1Ids,callback){if(null==sync1Ids||0==sync1Ids.length)return null;SamsungSCloudSyncService.mCloudServiceManager||(SamsungSCloudSyncService.mCloudServiceManager=new ICloudServiceManager);const baseUrl=SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getBaseUrl();null==baseUrl&&SamsungSCloudSyncService.SyncLogs.log("deleteItems: There is NO Base URL.");let url=`https://${baseUrl}`;SamsungSCloudSyncService.mKVSConstants||(SamsungSCloudSyncService.mKVSConstants=new KVSConstants);url=url.concat(SamsungSCloudSyncService.mKVSConstants.DELETE),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getPutApiParams(this.mCid)),url=url.concat("&"),url=url.concat(SamsungSCloudSyncService.mKVSConstants.CTID),url=url.concat("="),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getCtid());const deletekeys=sync1Ids.map((syncId=>({key:syncId,timestamp:Date.now()})));SamsungSCloudSyncService.mCloudServiceManager.setLastApi(SamsungSCloudSyncService.mKVSConstants.KVS.DELETE),SamsungSCloudSyncService.mKVSResponse||(SamsungSCloudSyncService.mKVSResponse=new KVSResponse);SamsungSCloudSyncService.mSyncConstants||(SamsungSCloudSyncService.mSyncConstants=new SyncConstants);return this.handleRequest(SamsungSCloudSyncService.mSyncConstants.REQUEST_POST,url.toString(),SamsungSCloudSyncService.mKVSResponse,JSON.stringify(deletekeys),null,callback),SamsungSCloudSyncService.mKVSResponse},this.setItems=function(recordDataList,callback){if(null==recordDataList)return null;SamsungSCloudSyncService.mCloudServiceManager||(SamsungSCloudSyncService.mCloudServiceManager=new ICloudServiceManager);const baseUrl=SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getBaseUrl();null==baseUrl&&SamsungSCloudSyncService.SyncLogs.log("setItems: There is NO Base URL.");let url=`https://${baseUrl}`;SamsungSCloudSyncService.mKVSConstants||(SamsungSCloudSyncService.mKVSConstants=new KVSConstants);url=url.concat(SamsungSCloudSyncService.mKVSConstants.SET),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getPutApiParams(this.mCid)),url=url.concat("&"),url=url.concat(SamsungSCloudSyncService.mKVSConstants.CTID),url=url.concat("="),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getCtid());let insertKeyObject=null;const setkeys=[];SamsungSCloudSyncService.SyncLogs.log(`setItems: RecordDataItem Size = ${recordDataList.length}`);for(let i=0;i<recordDataList.length;i++){const recordItemObject=recordDataList[i];try{insertKeyObject=recordItemObject.toJSON()}catch(e){SamsungSCloudSyncService.SyncLogs.log("setItems: JSON PARSER Exception")}setkeys.push(insertKeyObject)}SamsungSCloudSyncService.mCloudServiceManager.setLastApi(SamsungSCloudSyncService.mKVSConstants.KVS.SET),SamsungSCloudSyncService.mSyncConstants||(SamsungSCloudSyncService.mSyncConstants=new SyncConstants);SamsungSCloudSyncService.mKVSResponse||(SamsungSCloudSyncService.mKVSResponse=new KVSResponse);return this.handleRequest(SamsungSCloudSyncService.mSyncConstants.REQUEST_POST,url.toString(),SamsungSCloudSyncService.mKVSResponse,JSON.stringify(setkeys),null,callback),SamsungSCloudSyncService.mKVSResponse},this.getItems=function(keyIds,callback){if(null==keyIds)return null;SamsungSCloudSyncService.mCloudServiceManager||(SamsungSCloudSyncService.mCloudServiceManager=new ICloudServiceManager);const baseUrl=SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getBaseUrl();null==baseUrl&&SamsungSCloudSyncService.SyncLogs.log("getItems: There is NO Base URL.");let url=`https://${baseUrl}`;SamsungSCloudSyncService.mKVSConstants||(SamsungSCloudSyncService.mKVSConstants=new KVSConstants);url=url.concat(SamsungSCloudSyncService.mKVSConstants.ITEM),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getGetApiParams(this.mCid)),url=url.concat("&"),url=url.concat(SamsungSCloudSyncService.mKVSConstants.CTID),url=url.concat("="),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getCtid()),SamsungSCloudSyncService.mServerCommonConstants||(SamsungSCloudSyncService.mServerCommonConstants=new ServerCommonConstants);for(let i=0;i<keyIds.length;i++)url=url.concat(SamsungSCloudSyncService.mServerCommonConstants.KEY),url=url.concat(keyIds[i]);SamsungSCloudSyncService.mCloudServiceManager.setLastApi(SamsungSCloudSyncService.mKVSConstants.KVS.ITEM),SamsungSCloudSyncService.mSyncConstants||(SamsungSCloudSyncService.mSyncConstants=new SyncConstants);SamsungSCloudSyncService.mKVSResponse||(SamsungSCloudSyncService.mKVSResponse=new KVSResponse);this.handleRequest(SamsungSCloudSyncService.mSyncConstants.REQUEST_GET,url.toString(),SamsungSCloudSyncService.mKVSResponse,null,null,callback)},this.getKeys=function(startKey,count,callback,isColdStart){SamsungSCloudSyncService.mCloudServiceManager||(SamsungSCloudSyncService.mCloudServiceManager=new ICloudServiceManager);const baseUrl=SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getBaseUrl();null==baseUrl&&SamsungSCloudSyncService.SyncLogs.log("getKeys: There is NO Base URL.");SamsungSCloudSyncService.mKVSConstants||(SamsungSCloudSyncService.mKVSConstants=new KVSConstants);let url=`https://${baseUrl}`;url=url.concat(SamsungSCloudSyncService.mKVSConstants.GETKEYS),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getGetApiParams(this.mCid)),url=url.concat(SamsungSCloudSyncService.mKVSConstants.START),url=url.concat(startKey),url=url.concat(SamsungSCloudSyncService.mKVSConstants.COUNT),url=url.concat(count),url=url.concat("&view=snapshot"),url=url.concat("&"),url=url.concat(SamsungSCloudSyncService.mKVSConstants.CTID),url=url.concat("="),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getCtid()),url=url.concat("&coldStartable=true"),url=isColdStart?url.concat("&start_timestamp=1000000000000L"):url,SamsungSCloudSyncService.mCloudServiceManager.setLastApi(SamsungSCloudSyncService.mKVSConstants.KVS.KEYS),SamsungSCloudSyncService.mSyncConstants||(SamsungSCloudSyncService.mSyncConstants=new SyncConstants);SamsungSCloudSyncService.mKVSResponse||(SamsungSCloudSyncService.mKVSResponse=new KVSResponse);this.handleRequest(SamsungSCloudSyncService.mSyncConstants.REQUEST_GET,url.toString(),SamsungSCloudSyncService.mKVSResponse,null,null,callback)},this.getUpdates=function(startTimeStamp,synckey,count,callback){SamsungSCloudSyncService.mCloudServiceManager||(SamsungSCloudSyncService.mCloudServiceManager=new ICloudServiceManager);const baseUrl=SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getBaseUrl();null==baseUrl&&SamsungSCloudSyncService.SyncLogs.log("getUpdates: There is NO Base URL.");SamsungSCloudSyncService.mKVSConstants||(SamsungSCloudSyncService.mKVSConstants=new KVSConstants);let url=`https://${baseUrl}`;url=url.concat(SamsungSCloudSyncService.mKVSConstants.UPDATE),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getGetApiParams(this.mCid)),url=url.concat(SamsungSCloudSyncService.mKVSConstants.START_TIMESTAMP),url=url.concat(startTimeStamp),null!=synckey&&0!=synckey.length&&(url=url.concat(SamsungSCloudSyncService.mServerCommonConstants.KEY),url=url.concat(synckey));url=url.concat(SamsungSCloudSyncService.mKVSConstants.COUNT),url=url.concat(count),url=url.concat("&"),url=url.concat(SamsungSCloudSyncService.mKVSConstants.CTID),url=url.concat("="),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getCtid()),SamsungSCloudSyncService.mCloudServiceManager.setLastApi(SamsungSCloudSyncService.mKVSConstants.KVS.UPDATES),SamsungSCloudSyncService.mSyncConstants||(SamsungSCloudSyncService.mSyncConstants=new SyncConstants);SamsungSCloudSyncService.mKVSResponse||(SamsungSCloudSyncService.mKVSResponse=new KVSResponse);this.handleRequest(SamsungSCloudSyncService.mSyncConstants.REQUEST_GET,url.toString(),SamsungSCloudSyncService.mKVSResponse,null,null,callback)},this.getServerTimeStamp=function(callback){SamsungSCloudSyncService.mCloudServiceManager||(SamsungSCloudSyncService.mCloudServiceManager=new ICloudServiceManager);const baseUrl=SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getBaseUrl();null==baseUrl&&SamsungSCloudSyncService.SyncLogs.log("getServerTimeStamp: There is NO Base URL.");SamsungSCloudSyncService.mKVSConstants||(SamsungSCloudSyncService.mKVSConstants=new KVSConstants);let url=`https://${baseUrl}`;url=url.concat(SamsungSCloudSyncService.mKVSConstants.TIMESTAMP),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getGetApiParams(this.mCid)),url=url.concat("&"),url=url.concat(SamsungSCloudSyncService.mKVSConstants.CTID),url=url.concat("="),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getCtid()),SamsungSCloudSyncService.mCloudServiceManager.setLastApi(SamsungSCloudSyncService.mKVSConstants.KVS.TIMESTAMP),SamsungSCloudSyncService.mSyncConstants||(SamsungSCloudSyncService.mSyncConstants=new SyncConstants);SamsungSCloudSyncService.mKVSResponse||(SamsungSCloudSyncService.mKVSResponse=new KVSResponse);this.handleRequest(SamsungSCloudSyncService.mSyncConstants.REQUEST_GET,url.toString(),SamsungSCloudSyncService.mKVSResponse,null,null,callback)},this.addHeaderForApi=function(request){void 0!==request&&request.addHeader(this.APP_ID_HEADER,this.APP_ID)},this.getUserAgent=function(){return this.USER_AGENT},this.servicePrepare=function(trigger,isSuc,msg,callback){SamsungSCloudSyncService.mCloudServiceManager||(SamsungSCloudSyncService.mCloudServiceManager=new ICloudServiceManager);const baseUrl=SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getBaseUrl();null==baseUrl&&SamsungSCloudSyncService.SyncLogs.log("servicePrepare: There is NO Base URL.");SamsungSCloudSyncService.mKVSConstants||(SamsungSCloudSyncService.mKVSConstants=new KVSConstants);let url=`https://${baseUrl}`;url=url.concat(SamsungSCloudSyncService.mKVSConstants.CLOUD_PREPARE),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getGetApiParams(this.mCid)),url=url.concat(`&${SamsungSCloudSyncService.mKVSConstants.DID}=02a1df9cafdeeb135c06e22e94c1f0b447b72a24cd4e78acf03225d33e5b54ce6830339f0d612c94681615976b06cd4d02e5&${SamsungSCloudSyncService.mKVSConstants.TRIGGER}=${trigger}&${SamsungSCloudSyncService.mKVSConstants.CDID}=CC:3A:61:00:4D:99&${SamsungSCloudSyncService.mKVSConstants.CTID}=${SamsungSCloudSyncService.mCloudServiceManager.getCtid()}&${SamsungSCloudSyncService.mKVSConstants.RESULT}=${SamsungSCloudSyncService.mCloudServiceManager.getLastApi()}${isSuc?SamsungSCloudSyncService.mKVSConstants.RESULT_RCODE:SamsungSCloudSyncService.mKVSConstants.RESULT_ERROR}${msg}`),SamsungSCloudSyncService.mCloudServiceManager.setLastApi(SamsungSCloudSyncService.mKVSConstants.CLOUD.PREPARE),SamsungSCloudSyncService.mSyncConstants||(SamsungSCloudSyncService.mSyncConstants=new SyncConstants);SamsungSCloudSyncService.mKVSResponse||(SamsungSCloudSyncService.mKVSResponse=new KVSResponse);return this.handleRequest(SamsungSCloudSyncService.mSyncConstants.REQUEST_GET,url.toString(),SamsungSCloudSyncService.mKVSResponse,null,null,callback),SamsungSCloudSyncService.mKVSResponse},this.serviceStart=function(trigger,callback){SamsungSCloudSyncService.mCloudServiceManager||(SamsungSCloudSyncService.mCloudServiceManager=new ICloudServiceManager);const baseUrl=SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getBaseUrl();if(null==baseUrl)return SamsungSCloudSyncService.SyncLogs.log("serviceStart: There is NO Base URL."),!1;SamsungSCloudSyncService.mKVSConstants||(SamsungSCloudSyncService.mKVSConstants=new KVSConstants);let url=`https://${baseUrl}`;url=url.concat(SamsungSCloudSyncService.mKVSConstants.CLOUD_START),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getGetApiParams(this.mCid)),url=url.concat(`&${SamsungSCloudSyncService.mKVSConstants.DID}=02a1df9cafdeeb135c06e22e94c1f0b447b72a24cd4e78acf03225d33e5b54ce6830339f0d612c94681615976b06cd4d02e5&${SamsungSCloudSyncService.mKVSConstants.TRIGGER}=${trigger}&${SamsungSCloudSyncService.mKVSConstants.CDID}=CC:3A:61:00:4D:99&${SamsungSCloudSyncService.mKVSConstants.CTID}=${SamsungSCloudSyncService.mCloudServiceManager.getCtid()}`),SamsungSCloudSyncService.mCloudServiceManager.setLastApi(SamsungSCloudSyncService.mKVSConstants.CLOUD.START),SamsungSCloudSyncService.mSyncConstants||(SamsungSCloudSyncService.mSyncConstants=new SyncConstants);SamsungSCloudSyncService.mKVSResponse||(SamsungSCloudSyncService.mKVSResponse=new KVSResponse);this.handleRequest(SamsungSCloudSyncService.mSyncConstants.REQUEST_GET,url.toString(),SamsungSCloudSyncService.mKVSResponse,null,null,callback)},this.serviceEnd=function(isSuc,msg,callback){SamsungSCloudSyncService.mCloudServiceManager||(SamsungSCloudSyncService.mCloudServiceManager=new ICloudServiceManager);SamsungSCloudSyncService.mKVSConstants||(SamsungSCloudSyncService.mKVSConstants=new KVSConstants);const baseUrl=SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getBaseUrl();null==baseUrl&&SamsungSCloudSyncService.SyncLogs.log("serviceEnd: There is NO Base URL.");let url=`https://${baseUrl}`;url=url.concat(SamsungSCloudSyncService.mKVSConstants.CLOUD_END),url=url.concat(SamsungSCloudSyncService.mCloudServiceManager.getAuthManager().getGetApiParams(this.mCid)),url=url.concat(`&${SamsungSCloudSyncService.mKVSConstants.DID}=02a1df9cafdeeb135c06e22e94c1f0b447b72a24cd4e78acf03225d33e5b54ce6830339f0d612c94681615976b06cd4d02e5&${SamsungSCloudSyncService.mKVSConstants.CDID}=CC:3A:61:00:4D:99&${SamsungSCloudSyncService.mKVSConstants.CTID}=${SamsungSCloudSyncService.mCloudServiceManager.getCtid()}&${SamsungSCloudSyncService.mKVSConstants.RESULT}=${SamsungSCloudSyncService.mCloudServiceManager.getLastApi()}${isSuc?SamsungSCloudSyncService.mKVSConstants.RESULT_RCODE:SamsungSCloudSyncService.mKVSConstants.RESULT_ERROR}${msg}`),SamsungSCloudSyncService.mSyncConstants||(SamsungSCloudSyncService.mSyncConstants=new SyncConstants);SamsungSCloudSyncService.mKVSResponse||(SamsungSCloudSyncService.mKVSResponse=new KVSResponse);this.handleRequest(SamsungSCloudSyncService.mSyncConstants.REQUEST_GET,url.toString(),SamsungSCloudSyncService.mKVSResponse,null,null,callback)}}function ORSConstants(){this.BOUNDARY="AaB03x",this.ORS="/ors",this.UPLOAD_FILE="?action=upload",this.FILE_NAME="&file_name=",this.FILE_TIMESTAMP="&timestamp=",this.METADATA="metadata",this.DOWNLOAD_FILE="?action=download",this.CREATE_FOLDER="?action=create",this.FOLDER_NAME="&folder_name=",this.DELETE_FILE="?action=delete",this.GETMETADATA="?action=get",this.METADATA_HEADER_NAME="Accept",this.METADATA_HEADER_VALUE="application/json",this.ERROR={},this.initializeErrorConstants=function(){this.ERROR.FOLDER_NOT_EXISTS=32e3,this.ERROR.FILE_NOT_EXISTS=32002,this.ERROR.RESOURCE_NOT_EXISTS=32006,this.ERROR.FOLDER_ALREADY_EXISTS=31e3},this.initializeErrorConstants()}function SCloudServiceManager(cid,isFileService){ICloudServiceManager.call(this),this.CLOUD_START_R_CLEARED=-1,this.CLOUD_START_R_SUCCESS=0,this.CLOUD_START_R_SERVER_MAINTENCE=5,this.CLOUD_START_R_FULLSYNC=9,this.mCtid=null,this.mLastApiCode=null,void 0!==cid?SamsungSCloudSyncService.recordServiceManager||(SamsungSCloudSyncService.recordServiceManager=new KVSServiceManager(cid,this)):SamsungSCloudSyncService.SyncLogs.log("SCloudServiceManager: cid is undefined"),this.serviceStart=function(trigger,cb){return SamsungSCloudSyncService.recordServiceManager.serviceStart(trigger,cb)},this.serviceEnd=function(isSuc,msg,cb){return SamsungSCloudSyncService.recordServiceManager.serviceEnd(isSuc,msg,cb)},this.getLastApi=function(){return this.mLastApiCode},this.getCtid=function(){return this.mCtid},this.getRecordServiceManager=function(){return SamsungSCloudSyncService.recordServiceManager},this.getFileServiceManager=function(){return SamsungSCloudSyncService.fileServiceManager},this.setLastApi=function(api){this.mLastApiCode=api},this.setCtid=function(ctid){this.mCtid=ctid},this.setAuthManager=function(authManger){SamsungSCloudSyncService.sAuthManager=authManger},this.getAuthManager=function(){return SamsungSCloudSyncService.sAuthManager}}function ServerCommonConstants(){this.USER_ID_PARM="&uid=",this.ACCESS_TOKEN_PARM="&access_token=",this.DEVICE_ID_PARM="&did=",this.CID_PARM="&cid=",this.KEY="&key=",this.CONTENT_TYPE_URI="Application/JSON;charset=UTF-8",this.KVS_SERVER_STORAGE_FULL=20003,this.ORS_SERVER_STORAGE_FULL=20004,this.BNR_SERVER_NOT_READY=20006,this.BNR_SERVER_MIGRATION=20007,this.BAD_ACCESS_TOKEN=19008,this.cleanup=function(){this.USER_ID_PARM=null,this.ACCESS_TOKEN_PARM=null,this.DEVICE_ID_PARM=null,this.CID_PARM=null,this.KEY=null,this.CONTENT_TYPE_URI=null,this.KVS_SERVER_STORAGE_FULL=null,this.ORS_SERVER_STORAGE_FULL=null,this.BNR_SERVER_NOT_READY=null,this.BNR_SERVER_MIGRATION=null,this.BAD_ACCESS_TOKEN=null}}