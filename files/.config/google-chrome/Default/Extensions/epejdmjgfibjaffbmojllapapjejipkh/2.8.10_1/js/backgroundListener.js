function importAvailable(){storageLocalApi.setItem(IMPORT_AVAILABLE,!0).then((()=>{chrome.runtime.sendMessage({CHROME_BOOKMARK_CHANGED:"CHANGED"})}))}function onInit(){isLoggedIn()&&chrome.action.setIcon({path:"assets/img/logo32x32.png"})}chrome.runtime.onMessage.addListener(((response,sender,sendResponse)=>{const{BUTTON:BUTTON,ACCESS_TOKEN_URL:ACCESS_TOKEN_URL,IMPORT_BOOKMARKS:IMPORT_BOOKMARKS,STATUS:STATUS=null}=response;switch(BUTTON){case"FETCH_LOGIN":default:break;case"BOOKMARK_SYNC":chrome.runtime.sendMessage({SYNC:"BOOKMARK_SYNC_STARTED"}),SamsungSCloudSyncService.BrowserOverlay.refreshSyncProcess();break;case"TAB_SYNC":chrome.runtime.sendMessage({SYNC:"TAB_SYNC_STARTED"}),SamsungSCloudSyncService.BrowserOverlay.refreshSyncProcess();break;case"LOGOUT":SamsungSCloudSyncService.BrowserOverlay.onLogoutClick()}if(ACCESS_TOKEN_URL&&SamsungSCloudSyncService.BrowserOverlay.onAccessTokenReceived(ACCESS_TOKEN_URL),IMPORT_BOOKMARKS){const _ID=IMPORTED_FOLDER_IDS[getBrowserName().toUpperCase()];let importBookmarks;switch(IMPORT_BOOKMARKS){case"overwrite":importBookmarks=importLocalBookmarksAndOverwrite({_ID:_ID});break;case"replace":importBookmarks=importLocalBookmarksAndReplace({_ID:_ID})}importBookmarks&&importBookmarks.then((length=>updateModifiedOfImportFolder().then((e=>{SamsungSCloudSyncService.SyncLogs.log("Import complete!"),sendResponse({length:length})}))),(err=>{SamsungSCloudSyncService.SyncLogs.log("Import failure!"),SamsungSCloudSyncService.SyncLogs.log(err),sendResponse({err:err})}))}switch(STATUS){case"LOGGED_IN":chrome.action.setIcon({path:"assets/img/logo32x32.png"});break;case"LOGGED_OUT":chrome.action.setIcon({path:"assets/img/logo32x32_gray.png"})}return!0})),chrome.commands.onCommand.addListener((command=>{chrome.tabs.query({active:!0,currentWindow:!0},(([{url:url,title:title}])=>{isLoggedIn()?addBookmark({url:url,title:title}).then((()=>bookmarkSavedNotif({title:title,url:url}))).catch((err=>notify({title:ERROR_STRING,body:err}))):notify({title:ERROR_STRING,body:NOTIFICATION_SIGIN_ERROR})}))})),chrome.action.onClicked.addListener((activeTab=>{if(SamsungSCloudSyncService.SyncLogs.log("BrowserAction clicked"),isLoggedIn())return void chrome.action.setPopup({popup:POPUP_URL});chrome.windows.getCurrent((win=>storageLocalApi.setItem(PARENT_WINDOW,win.id)));const extensionURL=POPUP_URL;windowPopupWithURLExists(["login-load.html",extensionURL,"https://account.samsung.cn/mobile/account/","https://account.samsung.com/mobile/account/","https://account.samsung.com/accounts/"]).then((({win:win,tab:tab})=>{SamsungSCloudSyncService.SyncLogs.log({win:win,tab:tab}),SamsungSCloudSyncService.SyncLogs.log("Window already open, bringing to focus"),chrome.windows.update(win.id,{focused:!0})})).catch((()=>{SamsungSCloudSyncService.SyncLogs.log("Window not open, creating new");const url=isLoggedIn()?extensionURL:"login-load.html";getWindowOptions().then((windowOptions=>chrome.windows.create(Object.assign({},windowOptions,{url:url}),(win=>{isLoggedIn()||onFetchLoginMessage({win:win,tab:win.tabs[0]})}))))}))})),chrome.bookmarks.onChanged.addListener(importAvailable),chrome.bookmarks.onCreated.addListener(importAvailable),chrome.bookmarks.onRemoved.addListener(importAvailable),chrome.bookmarks.onMoved.addListener(importAvailable),chrome.bookmarks.onChildrenReordered.addListener(importAvailable),storageLocalApi.waitForAvailable().then((()=>{1==storageLocalApi.getItem(IS_LOGGED_OUT)&&(chrome.action.setPopup({popup:POPUP_URL}),chrome.action.setIcon({path:"assets/img/logo32x32.png"})),storageLocalApi.getItem(HAS_SEEN_GUIDE)||storageLocalApi.setItem(HAS_SEEN_GUIDE,"true").then((()=>{chrome.tabs.create({url:"guide-page.html"})}))})),setTimeout(onInit,100);